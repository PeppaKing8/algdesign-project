@inproceedings{inproceedings,
author = {Karger, David},
year = {1993},
month = {01},
pages = {21-30},
title = {Global Min-cuts in $RNC$ and Other Ramifications of a Simple Mincut Algorithm},
journal = {Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms},
doi = {10.1145/313559.313605}
}

@article{CHOU199549,
title = {Parallelizing Strassen's method for matrix multiplication on distributed-memory MIMD architectures},
journal = {Computers and Mathematics with Applications},
volume = {30},
number = {2},
pages = {49-69},
year = {1995},
issn = {0898-1221},
doi = {https://doi.org/10.1016/0898-1221(95)00077-C},
url = {https://www.sciencedirect.com/science/article/pii/089812219500077C},
author = {C.-C. Chou and Y.-F. Deng and G. Li and Y. Wang},
keywords = {Matrix multiplication, Parallel computation, Strassen's method},
abstract = {We present a parallel method for matrix multiplication on distributed-memory MIMD architectures based on Strassen's method. Our timing tests, performed on a 56-node Intel Paragon, demonstrate the realization of the potential of the Strassen's method with a complexity of 4.7 M2.807 at the system level rather than the node level at which several earlier works have been focused. The parallel efficiency is nearly perfect when the processor number is the power of 7. The parallelized Strassen's method seems always faster than the traditional matrix multiplication methods whose complexity is 2M3 coupled with the BMR method and the Ring method at the system level. The speed gain depends on matrix order M: 20% for M ≈ 1000 and more than 100% for M ≈ 5000.}
}

@misc{williams2023newboundsmatrixmultiplication,
      title={New Bounds for Matrix Multiplication: from Alpha to Omega}, 
      author={Virginia Vassilevska Williams and Yinzhan Xu and Zixuan Xu and Renfei Zhou},
      year={2023},
      eprint={2307.07970},
      archivePrefix={arXiv},
      primaryClass={cs.DS},
      url={https://arxiv.org/abs/2307.07970}, 
}

@article{cite-key,
	abstract = {Strassen's algorithm for fast matrix-matrix multiplication has been implemented for matrices of arbitrary shapes on the CRAY-2 and CRAY Y-MP supercomputers. Several techniques have been used to reduce the scratch space requirement for this algorithm while simultaneously preserving a high level of performance. When the resulting Strassen-based matrix multiply routine is combined with some routines from the new LAPACK library, LU decomposition can be performed with rates significantly higher than those achieved by conventional means. We succeeded in factoring a 2048 ×2048 matrix on the CRAY Y-MP at a rate equivalent to 325 MFLOPS.},
	author = {Bailey, David H. and Lee, King and Simon, Horst D.},
	date = {1991/01/01},
	date-added = {2024-10-12 21:06:12 +0800},
	date-modified = {2024-10-12 21:06:12 +0800},
	doi = {10.1007/BF00129836},
	id = {Bailey1991},
	isbn = {1573-0484},
	journal = {The Journal of Supercomputing},
	number = {4},
	pages = {357--371},
	title = {Using Strassen's algorithm to accelerate the solution of linear systems},
	url = {https://doi.org/10.1007/BF00129836},
	volume = {4},
	year = {1991},
	bdsk-url-1 = {https://doi.org/10.1007/BF00129836}}


@misc{zwick2000pairsshortestpathsusing,
      title={All Pairs Shortest Paths using Bridging Sets and Rectangular Matrix Multiplication}, 
      author={Uri Zwick},
      year={2000},
      eprint={cs/0008011},
      archivePrefix={arXiv},
      primaryClass={cs.DS},
      url={https://arxiv.org/abs/cs/0008011}, 
}

@article{ALON1997255,
title = {On the Exponent of the All Pairs Shortest Path Problem},
journal = {Journal of Computer and System Sciences},
volume = {54},
number = {2},
pages = {255-262},
year = {1997},
issn = {0022-0000},
doi = {https://doi.org/10.1006/jcss.1997.1388},
url = {https://www.sciencedirect.com/science/article/pii/S002200009791388X},
author = {Noga Alon and Zvi Galil and Oded Margalit},
abstract = {The upper bound on the exponent,ω, of matrix multiplication over a ring that was three in 1968 has decreased several times and since 1986 it has been 2.376. On the other hand, the exponent of the algorithms known for the all pairs shortest path problem has stayed at three all these years even for the very special case of directed graphs with uniform edge lengths. In this paper we give an algorithm of timeO(nνlog3n),ν=(3+ω)/2, for the case of edge lengths in {−1, 0, 1}. Thus, for the current known bound onω, we get a bound on the exponent,ν<2.688. In case of integer edge lengths with absolute value bounded above byM, the time bound isO((Mn)νlog3n) and the exponent is less than 3 forM=O(nα), forα<0.116 and the current bound onω.}
}

@inbook{doi:10.1137/1.9781611977912.111,
author = {Monika Henzinger and Jason Li and Satish Rao and Di Wang},
title = {Deterministic Near-Linear Time Minimum Cut in Weighted Graphs},
booktitle = {Proceedings of the 2024 Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)},
chapter = {},
pages = {3089-3139},
doi = {10.1137/1.9781611977912.111},
URL = {https://epubs.siam.org/doi/abs/10.1137/1.9781611977912.111},
eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9781611977912.111},
    abstract = { Abstract In 1996, Karger [Kar96] gave a startling randomized algorithm that finds a minimum-cut in a (weighted) graph in time O(m log3 n) which he termed near-linear time meaning linear (in the size of the input) times a polylogarthmic factor. In this paper, we give the first deterministic algorithm which runs in near-linear time for weighted graphs. Previously, the breakthrough results of Kawarabayashi and Thorup [KT19] gave a near-linear time algorithm for simple graphs (which was improved to have running time O(m log2 n log log n) in [HRW20].) The main technique here is a clustering procedure that perfectly preserves minimum cuts. Recently, Li [Li21] gave an m1+o(1) deterministic minimum-cut algorithm for weighted graphs; this form of running time has been termed “almost-linear”. Li uses almost-linear time deterministic expander decompositions which do not perfectly preserve minimum cuts, but he can use these clusterings to, in a sense, “derandomize” the methods of Karger. In terms of techniques, we provide a structural theorem that says there exists a sparse clustering that preserves minimum cuts in a weighted graph with o(1) error. In addition, we construct it deterministically in near linear time. This was done exactly for simple graphs in [KT19, HRW20] and with polylogarithmic error for weighted graphs in [Li21]. Extending the techniques in [KT19, HRW20] to weighted graphs presents significant challenges, and moreover, the algorithm can only polylogarithmically approximately preserve minimum cuts. A remaining challenge is to reduce the polylogarithmic-approximate clusterings to 1 + o(1/ log n)-approximate so that they can be applied recursively as in [Li21] over O(log n) many levels. This is an additional challenge that requires building on properties of tree-packings in the presence of a wide range of edge weights to, for example, find sources for local flow computations which identify minimum cuts that cross clusters. }
}

@book{garey1979computers,
  title={Computers and intractability},
  author={Garey, Michael R and Johnson, David S},
  volume={174},
  year={1979},
  publisher={freeman San Francisco}
}

@article{karger1996new,
  title={A new approach to the minimum cut problem},
  author={Karger, David R and Stein, Clifford},
  journal={Journal of the ACM (JACM)},
  volume={43},
  number={4},
  pages={601--640},
  year={1996},
  publisher={ACM New York, NY, USA}
}

@article{karger2000minimum,
  title={Minimum cuts in near-linear time},
  author={Karger, David R},
  journal={Journal of the ACM (JACM)},
  volume={47},
  number={1},
  pages={46--76},
  year={2000},
  publisher={ACM New York, NY, USA}
}

@article{stoer1997simple,
  title={A simple min-cut algorithm},
  author={Stoer, Mechthild and Wagner, Frank},
  journal={Journal of the ACM (JACM)},
  volume={44},
  number={4},
  pages={585--591},
  year={1997},
  publisher={ACM New York, NY, USA}
}

@INPROCEEDINGS{267748,
  author={Alon, N. and Galil, Z. and Margalit, O. and Naor, M.},
  booktitle={Proceedings., 33rd Annual Symposium on Foundations of Computer Science}, 
  title={Witnesses for Boolean matrix multiplication and for shortest paths}, 
  year={1992},
  volume={},
  number={},
  pages={417-426},
  keywords={Computer science;Algorithm design and analysis;Mathematics;Shortest path problem;Random variables},
  doi={10.1109/SFCS.1992.267748}}

@inproceedings{10.1145/100216.100244,
author = {Naor, J. and Naor, M.},
title = {Small-bias probability spaces: efficient constructions and applications},
year = {1990},
isbn = {0897913612},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/100216.100244},
doi = {10.1145/100216.100244},
booktitle = {Proceedings of the Twenty-Second Annual ACM Symposium on Theory of Computing},
pages = {213–223},
numpages = {11},
location = {Baltimore, Maryland, USA},
series = {STOC '90}
}

@misc{CS161Lecture16,
  author       = {Peng Hui How and Virginia Williams and Anthony Kim and Mary Wootters},
  title        = {CS 161 Lecture 16: Min Cut and Karger’s Algorithm},
  year         = {2017},
  note         = {Adapted from Virginia Williams’ lecture notes},
  url          = {https://web.stanford.edu/class/archive/cs/cs161/cs161.1182/Lectures/Lecture16/CS161Lecture16.pdf}
}

@inproceedings{karger1994random,
  title={Random sampling in cut, flow, and network design problems},
  author={Karger, David R},
  booktitle={Proceedings of the twenty-sixth annual ACM symposium on Theory of computing},
  pages={648--657},
  year={1994}
}

@article{gabow1991faster,
  title={Faster scaling algorithms for general graph matching problems},
  author={Gabow, Harold N and Tarjan, Robert E},
  journal={Journal of the ACM (JACM)},
  volume={38},
  number={4},
  pages={815--853},
  year={1991},
  publisher={ACM New York, NY, USA}
}

@inproceedings{gabow1983linear,
  title={A linear-time algorithm for a special case of disjoint set union},
  author={Gabow, Harold N and Tarjan, Robert Endre},
  booktitle={Proceedings of the fifteenth annual ACM symposium on Theory of computing},
  pages={246--251},
  year={1983}
}